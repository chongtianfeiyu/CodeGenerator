// ------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本: 10.0.0.0
//  
//     对此文件的更改可能会导致不正确的行为。此外，如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
// ------------------------------------------------------------------------------
namespace CodeGenerator.Core
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    
    #line 1 "D:\GitHub\CodeGenerator\CodeGenerator\Core\MyBatis_MySQL.tt"
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "10.0.0.0")]
    public partial class MyBatis_MySQL : T4Base
    {
        public override string TransformText()
        {
            this.Write("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!DOCTYPE mapper\r\n  PUBLIC \"-//mybatis.or" +
                    "g//DTD Mapper 3.0//EN\"\r\n  \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\r\n<mappe" +
                    "r namespace=\"");
            
            #line 10 "D:\GitHub\CodeGenerator\CodeGenerator\Core\MyBatis_MySQL.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Namespace));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 10 "D:\GitHub\CodeGenerator\CodeGenerator\Core\MyBatis_MySQL.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.TableName));
            
            #line default
            #line hidden
            this.Write("Dao\">\t\r\n\t<insert parameterType=\"");
            
            #line 11 "D:\GitHub\CodeGenerator\CodeGenerator\Core\MyBatis_MySQL.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.FullClassName));
            
            #line default
            #line hidden
            this.Write("\">\r\n\t\tINSERT INTO ");
            
            #line 12 "D:\GitHub\CodeGenerator\CodeGenerator\Core\MyBatis_MySQL.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.TableName));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 12 "D:\GitHub\CodeGenerator\CodeGenerator\Core\MyBatis_MySQL.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(string.Join(",", this.DbColumns.Select(col=>string.Format("{0}",col.ColumnName)))));
            
            #line default
            #line hidden
            this.Write(")\r\n\t\tVALUES(");
            
            #line 13 "D:\GitHub\CodeGenerator\CodeGenerator\Core\MyBatis_MySQL.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(string.Join(",", this.DbColumns.Select(col=>string.Format("#{{{0}}}",col.ColumnName)))));
            
            #line default
            #line hidden
            this.Write(")\r\n\t</insert>\r\n\t<update id=\"update\" parameterType=\"");
            
            #line 15 "D:\GitHub\CodeGenerator\CodeGenerator\Core\MyBatis_MySQL.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.FullClassName));
            
            #line default
            #line hidden
            this.Write("\">\r\n\t\tUPDATE ");
            
            #line 16 "D:\GitHub\CodeGenerator\CodeGenerator\Core\MyBatis_MySQL.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.TableName));
            
            #line default
            #line hidden
            this.Write(" SET \r\n\t\t");
            
            #line 17 "D:\GitHub\CodeGenerator\CodeGenerator\Core\MyBatis_MySQL.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(string.Join(",", this.DbColumnsWithoutPrimaryKey.Select(col=>string.Format("{0}=#{{{0}}}",col)))));
            
            #line default
            #line hidden
            this.Write(" \r\n\t\tWHERE ");
            
            #line 18 "D:\GitHub\CodeGenerator\CodeGenerator\Core\MyBatis_MySQL.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(string.Join(",", this.PrimaryKeys.Select(col=>string.Format("{0}=#{{{0}}}",col)))));
            
            #line default
            #line hidden
            this.Write(" \r\n\t</update>\r\n\t<update id=\"batchUpdate\" parameterType=\"list\">\r\n\t\tINSERT INTO\r\n\t\t" +
                    "");
            
            #line 22 "D:\GitHub\CodeGenerator\CodeGenerator\Core\MyBatis_MySQL.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(string.Join(",", this.DbColumnsWithoutIdentityKey)));
            
            #line default
            #line hidden
            this.Write("\r\n\t\tVALUES\r\n\t\t<foreach collection=\"list\" item=\"item\" index=\"index\" separator=\",\">" +
                    "\r\n\t\t\t(");
            
            #line 25 "D:\GitHub\CodeGenerator\CodeGenerator\Core\MyBatis_MySQL.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(string.Join(",", this.DbColumnsWithoutIdentityKey.Select(col=>string.Format("#{{item.{0}}}",col)))));
            
            #line default
            #line hidden
            this.Write(")\r\n\t\t</foreach>\r\n\t\tON DUPLICATE KEY UPDATE\r\n\t\t");
            
            #line 28 "D:\GitHub\CodeGenerator\CodeGenerator\Core\MyBatis_MySQL.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(string.Join(",", this.DbColumnsWithoutPrimaryKey.Select(col=>string.Format("{0}=VALUES({0})",col)))));
            
            #line default
            #line hidden
            this.Write("\r\n\t</update>\r\n</mapper>");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
